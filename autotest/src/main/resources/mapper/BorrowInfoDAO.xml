<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.tdw.dao.BorrowInfoDAO">

	<resultMap id="BaseResultMap" type="cn.tdw.domain.BorrowInfo">
		<id column="borrowId" jdbcType="VARCHAR" property="borrowId" />
		<result column="userId" jdbcType="VARCHAR" property="userId" />
		<result column="couponId" jdbcType="VARCHAR" property="couponId" />
		<result column="userName" jdbcType="VARCHAR" property="userName" />
		<result column="realName" jdbcType="VARCHAR" property="realName" />
		<result column="telNo" jdbcType="VARCHAR" property="telNo" />
		<result column="deadline" jdbcType="INTEGER" property="deadline" />
		<result column="contractNo" jdbcType="VARCHAR" property="contractNo" />
		<result column="status" jdbcType="INTEGER" property="status" />
		<result column="amount" jdbcType="BIGINT" property="amount" />
		<result column="realAmount" jdbcType="BIGINT" property="realAmount" />
		<result column="tuandaiAmount" jdbcType="BIGINT" property="tuandaiAmount" />
		<result column="messageAmount" jdbcType="BIGINT" property="messageAmount" />
		<result column="guaranteAmount" jdbcType="BIGINT" property="guaranteAmount" />
		<result column="interestAmount" jdbcType="BIGINT" property="interestAmount" />
		<result column="couponAmount" jdbcType="BIGINT" property="couponAmount" />
		<result column="isDeleted" jdbcType="BOOLEAN" property="isDeleted" />
		<result column="isHandle" jdbcType="BOOLEAN" property="isHandle" />
		<result column="cycDate" jdbcType="DATE" property="cycDate" />
		<result column="handleDate" jdbcType="TIMESTAMP" property="handleDate" />
		<result column="createDate" jdbcType="TIMESTAMP" property="createDate" />
		<result column="lastUpdated" jdbcType="TIMESTAMP" property="lastUpdated" />
		<result column="version" jdbcType="INTEGER" property="version"/>
	</resultMap>

	<resultMap id="BorrowWithAllocateInfoMap" type="cn.tdw.dto.AllocationsInfoDTO"/>

	<sql id="Base_Column_List">
		borrowId,userId,couponId,deadline,contractNo,status,amount,realAmount,tuandaiAmount,messageAmount,guaranteAmount,interestAmount,couponAmount,isDeleted,isHandle,
		cycDate,handleDate,createDate,lastUpdated,version
	</sql>

	<sql id="borrowing_details">
		b.amount,b.deadline,b.interestAmount,b.realAmount,b.cycDate,b.status,b.tuandaiAmount,b.announcement,
		b.messageAmount,b.guaranteAmount,uc.tuandaiRate,uc.messageRate,uc.guaranteRate,bd.createDate,
        cb.channelName,odr.penaltyAmount,odr.interest,odr.cost
	</sql>

	<sql id="Base_Table_Name">BorrowInfo</sql>
	<sql id="User_Table_Name">UserBasicInfo</sql>

	<select id="selectByPrimaryKey" parameterType="string" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from <include refid="Base_Table_Name"/>
		where borrowId = #{borrowId}
	</select>

	<select id="selectByCollectionTask" parameterType="cn.tdw.dto.CollectionTaskSearchDTO" resultMap="BaseResultMap">
		select b.borrowId, b.userId, b.couponId, b.deadline, b.contractNo, b.status, b.amount, b.realAmount, b.tuandaiAmount, b.messageAmount, b.guaranteAmount, b.interestAmount,
		b.couponAmount, b.isDeleted, b.isHandle, b.cycDate, b.handleDate, b.createDate, b.lastUpdated, b.version, u.userName, u.realName, u.telNo
		from <include refid="Base_Table_Name"/> as b join <include refid="User_Table_Name"/> as u on b.userId=u.userId
		<where>
			<if test="telNo != null and telNo!=''" >
				u.telNo = #{telNo,jdbcType=VARCHAR}
			</if>
		</where>
	</select>

	<select id="selectAllocateWithoutResloveList" parameterType="cn.tdw.dto.AllocationsInfoSearchDTO" resultMap="BorrowWithAllocateInfoMap">
		SELECT
			b.borrowId,
			b.userId,
			b. STATUS,
			b.amount,
			odr.cost,
			b.interestAmount,
			b.isDeleted,
			b.cycDate,
			DATEDIFF(NOW(),b.cycDate) AS overdue_days,
			u.userName,
			u.realName,
			u.telNo,
			ct.tracker_id,
			ct.create_time,
			su.username AS tracker_name,
			odr.penaltyAmount
		FROM
			BorrowInfo AS b
		JOIN UserBasicInfo AS u ON b.userId = u.userId
		JOIN collection_task AS ct ON b.borrowId = ct.borrow_id
		LEFT JOIN sys_user AS su ON ct.tracker_id = su.user_id
		LEFT JOIN OverDueRecord AS odr ON b.borrowId = odr.borrowId
		<where>
			<if test="userName!=null and userName!=''">
				and u.realName = #{userName}
			</if>
			<if test="mobile!=null and mobile!=''">
				and u.telNo = #{mobile}
			</if>
			<if test="repayStatue!=null">
				and b. STATUS = #{repayStatue}
			</if>
			<if test="repayBDate!=null and repayBDate!=''">
				and b.cycDate >= #{repayBDate}
			</if>
			<if test="repayEDate!=null and repayEDate!=''">
				<![CDATA[ and b.cycDate <= #{repayEDate} ]]>
			</if>
			<if test="overdueMinDay!=null">
				and DATEDIFF(NOW(),b.cycDate) >= #{overdueMinDay}
			</if>
			<if test="overdueMaxDay!=null">
				<![CDATA[ and DATEDIFF(NOW(),b.cycDate) <= #{overdueMaxDay} ]]>
			</if>
			<if test="allocateSDate!=null and allocateSDate!=''">
				and date(ct.create_time) >= #{allocateSDate}
			</if>
			<if test="allocateEDate!=null and allocateEDate!=''">
				<![CDATA[ and date(ct.create_time) <= #{allocateEDate} ]]>
			</if>
			<if test="trackerName!=null and trackerName!=''">
				and su.username = #{trackerName}
			</if>
			AND b.isDeleted = FALSE
			AND b.`status` in (7,8)
		</where>
		order by b.cycDate asc
	</select>


	<select id="queryTraceDetails" resultType="cn.tdw.dto.TraceDetailDTO">
		SELECT
			b.borrowId,
			u.userId,
			u.realName,
			u.telNo,
			b.STATUS status,
			DATEDIFF(NOW(),b.cycDate) AS overdueDays,
			b.cycDate,
			CASE WHEN b.`status`=6 THEN odr.cost+odr.penaltyAmount ELSE 0 END repayAmount,
			CASE WHEN b.`status` in(7,8) THEN odr.cost+odr.penaltyAmount ELSE 0 END taskAmount,
			ct.create_time createTime,
			su.username trackerName,
			su.user_id  trackerId
		FROM
		BorrowInfo AS b
		JOIN UserBasicInfo AS u ON b.userId = u.userId
		JOIN collection_task AS ct ON b.borrowId = ct.borrow_id
		JOIN sys_user AS su ON ct.tracker_id = su.user_id
		JOIN OverDueRecord AS odr ON b.borrowId = odr.borrowId

		<where>
			and b.status IN (6,7,8)
            <if test="realName != null and realName !=''">
                and u.realName=#{realName}
            </if>
            <if test="repayStatus != null">
                and b.status=#{repayStatus}
            </if>
            <if test="repayBDate != null and repayBDate !=''">
                and b.cycDate>=#{repayBDate}
            </if>
            <if test="repayEDate != null and repayEDate !=''">
                and b.cycDate &lt; #{repayEDate}
            </if>
            <if test="telNo != null and telNo !=''">
                and u.telNo = #{telNo}
            </if>
            <if test="overdueMinDay != null">
                and DATEDIFF(NOW(),b.cycDate) >= #{overdueMinDay}
            </if>
            <if test="overdueMaxDay != null">
                and DATEDIFF(NOW(),b.cycDate) &lt; #{overdueMaxDay}
            </if>

            <if test="allocateSDate != null and allocateSDate !=''">
                and ct.create_time>=#{allocateSDate}
            </if>

            <if test="allocateEDate != null and allocateEDate !=''">
                and ct.create_time &lt; #{allocateEDate}
            </if>

            <if test="trackerName != null and trackerName !=''">
                and su.username = #{trackerName}
            </if>
			<if test="trackerId !=null">
				and ct.tracker_id = #{trackerId}
			</if>

			<if test="repayType !=null and repayType !=''" >
				<if test="repayType==1">

					and (CASE WHEN b.`status` in(7,8) THEN odr.cost+odr.penaltyAmount ELSE 0 END  )>0
				</if>
				<if test="repayType==2">


				</if>
				<if test="repayType==3">
					and (CASE WHEN b.`status` in(7,8) THEN odr.cost+odr.penaltyAmount ELSE 0 END) = 0

				</if>


			</if>

        </where>

		ORDER BY ct.create_time
	</select>

	<select id="selectBorrowInfo" parameterType="java.lang.String" resultType="cn.tdw.domain.BorrowInfo">
		SELECT
		<include refid="borrowing_details"/>
		FROM BorrowInfo as b
		LEFT JOIN BorrowDetail bd ON bd.borrowId=b.borrowId
		LEFT JOIN OverDueRecord AS odr ON odr.borrowId= b.borrowId
		LEFT JOIN UserBasicInfo as uc on uc.userId=b.userId
		LEFT JOIN UserChannelRegister as ur ON ur.userId=uc.userId
		LEFT JOIN ChannelBusiness as cb ON cb.channelId=ur.channelId
		WHERE b.userId=#{userId} and b.borrowId=#{borrowId}
	</select>


    <update id="upBulletin" parameterType="java.lang.String">
     UPDATE  BorrowInfo SET announcement=#{announcement} WHERE borrowId=#{borrowId};
    </update>

</mapper>